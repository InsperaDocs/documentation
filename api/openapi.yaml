openapi: 3.0.3
info:
  title: Inspera Originality API
  version: 1.2.0

servers:
  - url: https://6x6hep4ey9.execute-api.eu-central-1.amazonaws.com/production
    description: Production Environment
  - url: https://ja0ot1lhh6.execute-api.eu-central-1.amazonaws.com/test
    description: Test Environment

components:
  securitySchemes:
    CrudBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Use token from `/login` for CRUD operations (users, courses, institutions).
    OriginalityBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Use token from `/token` for document submission & originality reports.

paths:
  /token:
    post:
      tags:
        - Upload
      summary: Authorization
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                institutionId:
                  type: string
              required:
                - clientId
                - institutionId
      responses:
        '200':
          description: Authentication token retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer

  /login:
    post:
      tags:
        - CRUD
      summary: Authorization (CRUD)
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Authentication token retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  expires_in:
                    type: integer

  /user:
    post:
      tags:
        - CRUD
      summary: Create User
      security:
        - CrudBearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                role:
                  type: string
                  enum: [educator, student]
                status:
                  type: number
                courses:
                  type: array
                  items:
                    type: string
              required:
                - firstName
                - lastName
                - email
                - role
                - courses
      responses:
        '201':
          description: User created

    delete:
      tags:
        - CRUD
      summary: Delete User
      security:
        - CrudBearerAuth: []
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted

  /user-info:
    get:
      tags:
        - CRUD
      summary: User Info
      security:
        - CrudBearerAuth: []
      parameters:
        - in: query
          name: email
          schema:
            type: string
          description: Retrieve user by email
        - in: query
          name: page
          schema:
            type: number
          description: Pagination page number
        - in: query
          name: limit
          schema:
            type: number
          description: Pagination limit
      responses:
        '200':
          description: User info retrieved

  /courses-info:
    get:
      tags:
        - CRUD
      summary: Subject Info
      security:
        - CrudBearerAuth: []
      parameters:
        - in: query
          name: courseCode
          schema:
            type: string
          description: Retrieve course by code
        - in: query
          name: page
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: string
      responses:
        '200':
          description: Course info retrieved

  /{institution-info}:
    get:
      tags:
        - CRUD
      summary: Institution Info
      security:
        - CrudBearerAuth: []
      parameters:
        - in: path
          name: institution-info
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Institution info retrieved

  /create/submission:
    post:
      tags:
        - Upload
      summary: Create Submission
      security:
        - OriginalityBearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                documentTitle:
                  type: string
                author:
                  type: string
                email:
                  type: string
                docType:
                  type: string
                translatedLanguage:
                  type: array
                  items:
                    type: string
                assignmentId:
                  type: string
                institutionName:
                  type: string
                enableAIDetection:
                  type: boolean
                enableReferenceDetection:
                  type: boolean
                reSubmissions:
                  type: number
                subjectId:
                  type: string
                maxLimit:
                  type: number
                archive:
                  type: boolean
                enableContextSimilarity:
                  type: boolean
                sentenceThresholds:
                  type: object
                sources:
                  type: object
                sourcesThreshold:
                  type: number
              required:
                - documentTitle
                - author
                - email
                - docType
      responses:
        '201':
          description: Submission created and presigned URL returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentId:
                    type: string
                  presignedS3Url:
                    type: string
                  message:
                    type: string

  /{document}/{documentId}/checkStatus:
    get:
      tags:
        - Upload
      summary: Check Submission Status
      security:
        - OriginalityBearerAuth: []
      parameters:
        - in: path
          name: document
          required: true
          schema:
            type: string
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status retrieved

  /document/{documentId}/mode/{mode}:
    get:
      tags:
        - Upload
      summary: Retrieve Report URL
      security:
        - OriginalityBearerAuth: []
      parameters:
        - in: path
          name: documentId
          required: true
          schema:
            type: string
        - in: path
          name: mode
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Report URL retrieved
